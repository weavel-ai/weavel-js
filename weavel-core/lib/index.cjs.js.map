{"version":3,"file":"index.cjs.js","sources":["../src/utils.ts","../src/types.ts","../src/eventemitter.ts","../src/storage-memory.ts","../src/index.ts"],"sourcesContent":["import { type WeavelCoreOptions } from \"./types\";\n\nexport function assert(truthyValue: any, message: string): void {\n  if (!truthyValue) {\n    throw new Error(message);\n  }\n}\n\nexport function removeTrailingSlash(url: string): string {\n  return url?.replace(/\\/+$/, \"\");\n}\n\nexport type RetriableOptions = {\n  retryCount?: number;\n  retryDelay?: number;\n  retryCheck?: (err: any) => boolean;\n}\n\nexport async function retriable<T>(\n  fn: () => Promise<T>,\n  props: RetriableOptions = {},\n  log: (msg: string) => void\n): Promise<T> {\n  const { retryCount = 3, retryDelay = 5000, retryCheck = () => true } = props;\n  let lastError = null;\n\n  for (let i = 0; i < retryCount + 1; i++) {\n    if (i > 0) {\n      // don't wait when it's the first try\n      await new Promise((resolve) => setTimeout(resolve, retryDelay));\n      log(`Retrying ${i + 1} of ${retryCount + 1}`);\n    }\n\n    try {\n      const res = await fn();\n      return res;\n    } catch (e) {\n      lastError = e;\n      if (!retryCheck(e)) {\n        throw e;\n      }\n      log(`Retriable error: ${JSON.stringify(e)}`);\n    }\n  }\n\n  throw lastError;\n}\n\n// https://stackoverflow.com/a/8809472\nexport function generateUUID(globalThis?: any): string {\n  // Public Domain/MIT\n  let d = new Date().getTime(); //Timestamp\n  let d2 =\n    (globalThis && globalThis.performance && globalThis.performance.now && globalThis.performance.now() * 1000) || 0; //Time in microseconds since page-load or 0 if unsupported\n  return \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g, function (c) {\n    let r = Math.random() * 16; //random number between 0 and 16\n    if (d > 0) {\n      //Use timestamp until depleted\n      r = (d + r) % 16 | 0;\n      d = Math.floor(d / 16);\n    } else {\n      //Use microseconds since page-load if supported\n      r = (d2 + r) % 16 | 0;\n      d2 = Math.floor(d2 / 16);\n    }\n    return (c === \"x\" ? r : (r & 0x3) | 0x8).toString(16);\n  });\n}\n\nexport function currentTimestamp(): number {\n  return new Date().getTime();\n}\n\nexport function currentISOTime(): string {\n  return new Date().toISOString();\n}\n\nexport function safeSetTimeout(fn: () => void, timeout: number): any {\n  // NOTE: we use this so rarely that it is totally fine to do `safeSetTimeout(fn, 0)``\n  // rather than setImmediate.\n  const t = setTimeout(fn, timeout) as any;\n  // We unref if available to prevent Node.js hanging on exit\n  t?.unref && t?.unref();\n  return t;\n}\n\nexport function getEnv<T = string>(key: string): T | undefined {\n  if (typeof process !== \"undefined\" && process.env[key]) {\n    return process.env[key] as T;\n  } else if (typeof globalThis !== \"undefined\") {\n    return (globalThis as any)[key];\n  }\n  return;\n}\n\nexport function configWeavelSDK(params?: WeavelCoreOptions): WeavelCoreOptions {\n  const { apiKey, ...coreOptions } = params ?? {};\n\n  // check environment variables if values not provided\n  const finalAPIKey = apiKey ?? getEnv(\"WEAVEL_PUBLIC_KEY\");\n  const finalBaseUrl = coreOptions.baseUrl ?? getEnv(\"WEAVEL_BASEURL\");\n\n  const finalCoreOptions = {\n    ...coreOptions,\n    baseUrl: finalBaseUrl,\n  };\n\n  return {\n    apiKey: finalAPIKey,\n    ...finalCoreOptions,\n  };\n}\n\nexport const encodeQueryParams = (params?: { [key: string]: any }): string => {\n  const queryParams = new URLSearchParams();\n  Object.entries(params ?? {}).forEach(([key, value]) => {\n    if (value !== undefined && value !== null) {\n      queryParams.append(key, value.toString());\n    }\n  });\n  return queryParams.toString();\n};\n","import { type components, type paths } from \"./openapi/server\";\n\nexport type WeavelCoreOptions = {\n  // Weavel API key obtained from the dashboard project settings\n  apiKey?: string;\n  // Weavel API baseUrl (https://api.weavel.ai by default)\n  baseUrl?: string;\n  // The number of events to queue before sending to Weavel (flushing)\n  flushAt?: number;\n  // The interval in milliseconds between periodic flushes\n  flushInterval?: number;\n  // How many times we will retry HTTP requests\n  fetchRetryCount?: number;\n  // The delay between HTTP request retries\n  fetchRetryDelay?: number;\n  // Timeout in milliseconds for any calls. Defaults to 10 seconds.\n  requestTimeout?: number;\n  // release (version) of the application, defaults to env WEAVEL_RELEASE\n  release?: string;\n  // integration type of the SDK.\n  sdkIntegration?: string; // DEFAULT, LANGCHAIN, or any other custom value\n  // Enabled switch for the SDK. If disabled, no observability data will be sent to Weavel. Defaults to true.\n  enabled?: boolean;\n};\n\nexport enum WeavelPersistedProperty {\n  Props = \"props\",\n  Queue = \"queue\",\n  OptedOut = \"opted_out\",\n}\n\nexport type WeavelFetchOptions = {\n  method: \"GET\" | \"POST\" | \"PUT\" | \"PATCH\";\n  headers: { [key: string]: string };\n  body?: string;\n  signal?: AbortSignal;\n};\n\nexport type WeavelFetchResponse<T = any> = {\n  status: number;\n  text: () => Promise<string>;\n  json: () => Promise<T>;\n};\n\nexport type IngestionType = SingleIngestionEvent[\"type\"];\n\nexport type WeavelQueueItem = SingleIngestionEvent & {\n  callback?: (err: any) => void;\n};\n\nexport type SingleIngestionEvent =\n  paths[\"/public/v2/batch\"][\"post\"][\"requestBody\"][\"content\"][\"application/json\"][\"batch\"][number];\n\n// ASYNC\nexport type BatchRequestBody = FixTypes<components[\"schemas\"][\"BatchRequestBody\"]>;\n\nexport type IdentifyUserBody = FixTypes<components[\"schemas\"][\"IdentifyUserBody\"]>;\nexport type CaptureSessionBody = FixTypes<components[\"schemas\"][\"CaptureSessionBody\"]>;\n\nexport type CaptureMessageBody = FixTypes<components[\"schemas\"][\"CaptureMessageBody\"]>;\nexport type CaptureTrackEventBody = FixTypes<components[\"schemas\"][\"CaptureTrackEventBody\"]>;\nexport type CaptureTraceBody = FixTypes<components[\"schemas\"][\"CaptureTraceBody\"]>;\n\nexport type CaptureSpanBody = FixTypes<components[\"schemas\"][\"CaptureSpanBody\"]>;\nexport type CaptureLogBody = FixTypes<components[\"schemas\"][\"CaptureLogBody\"]>;\nexport type CaptureGenerationBody = FixTypes<components[\"schemas\"][\"CaptureGenerationBody\"]>;\n\nexport type UpdateTraceBody = FixTypes<components[\"schemas\"][\"UpdateTraceBody\"]>;\nexport type UpdateSpanBody = FixTypes<components[\"schemas\"][\"UpdateSpanBody\"]>;\nexport type UpdateGenerationBody = FixTypes<components[\"schemas\"][\"UpdateGenerationBody\"]>;\n\n\nexport type JsonType = string | number | boolean | null | { [key: string]: JsonType } | Array<JsonType>;\n\ntype OptionalTypes<T> = T extends null | undefined ? T : never;\ntype FixTypes<T> = Omit<\n  {\n    [P in keyof T]: P extends \"startTime\" | \"endTime\" | \"timestamp\" | \"completionStartTime\" | \"createdAt\" | \"updatedAt\"\n      ? // Dates instead of strings\n        Date | OptionalTypes<T[P]>\n      : P extends \"metadata\" | \"input\" | \"output\" | \"completion\" | \"expectedOutput\"\n        ? // JSON instead of strings\n          any | OptionalTypes<T[P]>\n        : T[P];\n  },\n  \"externalId\" | \"traceIdType\"\n>;\n\nexport type DeferRuntime = {\n  weavelTraces: (\n    traces: {\n      id: string;\n      name: string;\n      url: string;\n    }[]\n  ) => void;\n};\n","export class SimpleEventEmitter {\n  events: { [key: string]: ((...args: any[]) => void)[] } = {};\n\n  constructor() {\n    this.events = {};\n  }\n\n  on(event: string, listener: (...args: any[]) => void): () => void {\n    if (!this.events[event]) {\n      this.events[event] = [];\n    }\n    this.events[event].push(listener);\n\n    return () => {\n      this.events[event] = this.events[event].filter((x) => x !== listener);\n    };\n  }\n\n  emit(event: string, payload: any): void {\n    for (const listener of this.events[event] || []) {\n      listener(payload);\n    }\n    for (const listener of this.events[\"*\"] || []) {\n      listener(event, payload);\n    }\n  }\n}\n","import { type WeavelPersistedProperty } from \"./types\";\n\nexport class WeavelMemoryStorage {\n  private _memoryStorage: { [key: string]: any | undefined } = {};\n\n  getProperty(key: WeavelPersistedProperty): any | undefined {\n    return this._memoryStorage[key];\n  }\n\n  setProperty(key: WeavelPersistedProperty, value: any | null): void {\n    this._memoryStorage[key] = value !== null ? value : undefined;\n  }\n}\n","import {\n  generateUUID,\n  removeTrailingSlash,\n  retriable,\n  safeSetTimeout,\n  type RetriableOptions\n} from \"./utils\";\nimport {\n  type WeavelFetchOptions,\n  type WeavelFetchResponse,\n  type WeavelQueueItem,\n  type WeavelCoreOptions,\n  type IngestionType,\n  WeavelPersistedProperty,\n  type CaptureTraceBody,\n  type CaptureSessionBody,\n  type CaptureSpanBody,\n  type CaptureGenerationBody,\n  type CaptureLogBody,\n  type CaptureMessageBody,\n  type CaptureTrackEventBody,\n  type IdentifyUserBody,\n  type UpdateTraceBody,\n  type UpdateSpanBody,\n  type UpdateGenerationBody,\n} from \"./types\";\n\nimport { SimpleEventEmitter } from \"./eventemitter\";\nexport * as utils from \"./utils\";\nexport {type SingleIngestionEvent} from \"./types\";\nexport { WeavelMemoryStorage } from \"./storage-memory\";\n\nclass WeavelFetchHttpError extends Error {\n  name = \"WeavelFetchHttpError\";\n  body: string | undefined;\n\n  constructor(\n    public response: WeavelFetchResponse,\n    body: string\n  ) {\n    super(\"HTTP error while fetching Weavel: \" + response.status + \" and body: \" + body);\n  }\n}\n\nclass WeavelFetchNetworkError extends Error {\n  name = \"WeavelFetchNetworkError\";\n\n  constructor(public error: unknown) {\n    super(\"Network error while fetching Weavel\", error instanceof Error ? { cause: error } : {});\n  }\n}\n\nfunction isWeavelFetchError(err: any): boolean {\n  return typeof err === \"object\" && (err.name === \"WeavelFetchHttpError\" || err.name === \"WeavelFetchNetworkError\");\n}\n\nabstract class WeavelCoreStateless {\n  // options\n  private apiKey: string;\n  baseUrl: string;\n  private flushAt: number;\n  private flushInterval: number;\n  private requestTimeout: number;\n  private removeDebugCallback?: () => void;\n  private debugMode: boolean = false;\n  private pendingPromises: Record<string, Promise<any>> = {};\n  private release: string | undefined;\n  private sdkIntegration: string;\n  private enabled: boolean;\n\n  // internal\n  protected _options: WeavelCoreOptions;\n  protected _events = new SimpleEventEmitter();\n  protected _flushTimer?: any;\n  protected _retryOptions: RetriableOptions;\n\n  // Abstract methods to be overridden by implementations\n  abstract fetch(url: string, options: WeavelFetchOptions): Promise<WeavelFetchResponse>;\n  abstract getLibraryId(): string;\n  abstract getLibraryVersion(): string;\n\n  // This is our abstracted storage. Each implementation should handle its own\n  abstract getPersistedProperty<T>(key: WeavelPersistedProperty): T | undefined;\n  abstract setPersistedProperty<T>(key: WeavelPersistedProperty, value: T | null): void;\n\n  constructor(params: WeavelCoreOptions) {\n    this._options = params;\n    const { apiKey, enabled, ...options } = params;\n\n    this.enabled = enabled === false ? false : true;\n    this.apiKey = apiKey ?? \"\";\n    this.baseUrl = removeTrailingSlash(options?.baseUrl || \"https://api.weavel.ai\");\n    this.flushAt = options?.flushAt ? Math.max(options?.flushAt, 1) : 15;\n    this.flushInterval = options?.flushInterval ?? 10000;\n\n    this._retryOptions = {\n      retryCount: options?.fetchRetryCount ?? 3,\n      retryDelay: options?.fetchRetryDelay ?? 3000,\n      retryCheck: isWeavelFetchError,\n    };\n    this.requestTimeout = options?.requestTimeout ?? 10000; // 10 seconds\n\n    this.sdkIntegration = options?.sdkIntegration ?? \"DEFAULT\";\n  }\n\n  getSdkIntegration(): string {\n    return this.sdkIntegration;\n  }\n\n  protected getCommonEventProperties(): any {\n    return {\n      $lib: this.getLibraryId(),\n      $lib_version: this.getLibraryVersion(),\n    };\n  }\n\n  on(event: string, cb: (...args: any[]) => void): () => void {\n    return this._events.on(event, cb);\n  }\n\n  debug(enabled: boolean = true): void {\n    this.removeDebugCallback?.();\n\n    this.debugMode = enabled;\n\n    if (enabled) {\n      this.removeDebugCallback = this.on(\"*\", (event, payload) =>\n        console.log(\"Weavel Debug\", event, JSON.stringify(payload))\n      );\n    }\n  }\n\n  /***\n   *** Handlers for each object type\n   ***/\n  protected sessionStateless(body: CaptureSessionBody): string {\n    const { session_id: bodyId, created_at: bodyCreatedAt, ...rest } = body;\n\n    const session_id = bodyId ?? generateUUID();\n\n    const parsedBody: CaptureSessionBody = {\n      session_id,\n      created_at: bodyCreatedAt ?? new Date().toISOString(),\n      ...rest,\n    };\n    this.enqueue(\"capture-session\", parsedBody);\n    return session_id;\n  }\n\n  protected identifyUserStateless(body: IdentifyUserBody): string {\n    const {  created_at: bodyCreatedAt, ...rest } = body;\n\n    const parsedBody: IdentifyUserBody = {\n      created_at: bodyCreatedAt ?? new Date().toISOString(),\n      ...rest,\n    };\n    this.enqueue(\"identify-user\", parsedBody);\n    return body.user_id;\n  }\n\n  protected messageStateless(body: CaptureMessageBody): string {\n    const { record_id: bodyId,  ...rest } = body;\n\n    const record_id = bodyId ?? generateUUID();\n    const parsedBody: CaptureMessageBody = {\n      record_id,\n      ...rest,\n    };\n    this.enqueue(\"capture-message\", parsedBody);\n    return record_id;\n  }\n\n  protected trackEventStateless(body: CaptureTrackEventBody): string {\n    const { record_id: bodyId,  ...rest } = body;\n\n    const record_id = bodyId ?? generateUUID();\n    const parsedBody: CaptureTrackEventBody = {\n      record_id,\n      ...rest,\n    };\n    this.enqueue(\"capture-track-event\", parsedBody);\n    return record_id;\n  }\n\n  protected traceStateless(body: CaptureTraceBody): string {\n    const { record_id: bodyId,  ...rest } = body;\n\n    const record_id = bodyId ?? generateUUID();\n    const parsedBody: CaptureTraceBody = {\n      record_id,\n      ...rest,\n    };\n    this.enqueue(\"capture-trace\", parsedBody);\n    return record_id;\n  }\n\n  protected spanStateless(body: CaptureSpanBody): string {\n    const { observation_id: bodyId, created_at: bodyCreatedAt, ...rest } = body;\n\n    const observation_id = bodyId || generateUUID();\n\n    const parsedBody: CaptureSpanBody = {\n      observation_id,\n      created_at: bodyCreatedAt ?? new Date().toISOString(),\n      ...rest,\n    };\n    this.enqueue(\"capture-span\", parsedBody);\n    return observation_id;\n  }\n\n  protected generationStateless(\n    body: CaptureGenerationBody\n  ): string {\n    const { observation_id: bodyId, created_at: bodyCreatedAt, ...rest } = body;\n\n    const observation_id = bodyId || generateUUID();\n\n    const parsedBody: CaptureGenerationBody = {\n      observation_id,\n      created_at: bodyCreatedAt ?? new Date().toISOString(),\n      ...rest,\n    };\n\n    this.enqueue(\"capture-generation\", parsedBody);\n    return observation_id;\n  }\n\n  protected logStateless(body: CaptureLogBody): string {\n    const { observation_id: bodyId, ...rest } = body;\n\n    const observation_id = bodyId || generateUUID();\n\n    const parsedBody: CaptureLogBody = {\n      observation_id,\n      ...rest,\n    };\n    this.enqueue(\"capture-log\", parsedBody);\n    return observation_id;\n  }\n\n  protected updateTraceStateless(body: UpdateTraceBody): string {\n    this.enqueue(\"update-trace\", body);\n    return body.record_id;\n  }\n\n  protected updateSpanStateless(body: UpdateSpanBody): string {\n    this.enqueue(\"update-span\", body);\n    return body.observation_id;\n  }\n\n  protected updateGenerationStateless(\n    body: UpdateGenerationBody\n  ): string {\n    this.enqueue(\"update-generation\", body);\n    return body.observation_id;\n  }\n\n  protected _parsePayload(response: any): any {\n    try {\n      return JSON.parse(response);\n    } catch {\n      return response;\n    }\n  }\n\n  /***\n   *** QUEUEING AND FLUSHING\n   ***/\n  protected enqueue(type: IngestionType, body: any): void {\n    try {\n      if (!this.enabled) {\n        return;\n      }\n\n      try {\n        JSON.stringify(body);\n      } catch (e) {\n        console.error(`Event Body for ${type} is not JSON-serializable: ${e}`);\n        this._events.emit(\"error\", `Event Body for ${type} is not JSON-serializable: ${e}`);\n\n        return;\n      }\n\n      const queue = this.getPersistedProperty<WeavelQueueItem[]>(WeavelPersistedProperty.Queue) || [];\n\n      queue.push({\n        type,\n        ...body,\n      });\n      this.setPersistedProperty<WeavelQueueItem[]>(WeavelPersistedProperty.Queue, queue);\n\n      this._events.emit(type, body);\n\n      // Flush queued events if we meet the flushAt length\n      if (queue.length >= this.flushAt) {\n        this.flush();\n      }\n\n      if (this.flushInterval && !this._flushTimer) {\n        this._flushTimer = safeSetTimeout(() => this.flush(), this.flushInterval);\n      }\n    } catch (e) {\n      this._events.emit(\"error\", e);\n    }\n  }\n\n  /**\n   * Asynchronously flushes all events that are not yet sent to the server.\n   * This function always resolves, even if there were errors when flushing.\n   * Errors are emitted as \"error\" events and the promise resolves.\n   *\n   * @returns {Promise<void>} A promise that resolves when the flushing is completed.\n   */\n  flushAsync(): Promise<void> {\n    return new Promise((resolve, _reject) => {\n      try {\n        this.flush((err, data) => {\n          if (err) {\n            console.error(\"Error while flushing Weavel\", err);\n            resolve();\n          } else {\n            resolve(data);\n          }\n        });\n      } catch (e) {\n        console.error(\"Error while flushing Weavel\", e);\n      }\n    });\n  }\n\n  // Flushes all events that are not yet sent to the server\n  flush(callback?: (err?: any, data?: any) => void): void {\n    if (this._flushTimer) {\n      clearTimeout(this._flushTimer);\n      this._flushTimer = null;\n    }\n\n    const queue = this.getPersistedProperty<WeavelQueueItem[]>(WeavelPersistedProperty.Queue) || [];\n\n    if (!queue.length) {\n      return callback?.();\n    }\n\n    const items = queue.splice(0, this.flushAt);\n    this.setPersistedProperty<WeavelQueueItem[]>(WeavelPersistedProperty.Queue, queue);\n\n    const MAX_MSG_SIZE = 1_000_000;\n    const BATCH_SIZE_LIMIT = 2_500_000;\n\n    this.processQueueItems(items, MAX_MSG_SIZE, BATCH_SIZE_LIMIT);\n\n    const promiseUUID = generateUUID();\n\n    const done = (err?: any): void => {\n      if (err) {\n        this._events.emit(\"error\", err);\n      }\n      callback?.(err, items);\n      this._events.emit(\"flush\", items);\n    };\n\n    const payload = JSON.stringify({\n      batch: items,\n      metadata: {\n        batch_size: items.length,\n        sdk_integration: this.sdkIntegration,\n        sdk_version: this.getLibraryVersion(),\n        sdk_variant: this.getLibraryId(),\n        sdk_name: \"weavel-js\",\n      },\n    }); // implicit conversion also of dates to strings\n\n    const url = `${this.baseUrl}/api/public/v2/batch`;\n\n    const fetchOptions = this._getFetchOptions({\n      method: \"POST\",\n      body: payload,\n    });\n\n    const requestPromise = this.fetchWithRetry(url, fetchOptions)\n      .then(() => done())\n      .catch((err) => {\n        done(err);\n      });\n    this.pendingPromises[promiseUUID] = requestPromise;\n    requestPromise.finally(() => {\n      delete this.pendingPromises[promiseUUID];\n    });\n  }\n\n  public processQueueItems(\n    queue: WeavelQueueItem[],\n    MAX_MSG_SIZE: number,\n    BATCH_SIZE_LIMIT: number\n  ): { processedItems: WeavelQueueItem[]; remainingItems: WeavelQueueItem[] } {\n    let totalSize = 0;\n    const processedItems: WeavelQueueItem[] = [];\n    const remainingItems: WeavelQueueItem[] = [];\n\n    for (let i = 0; i < queue.length; i++) {\n      try {\n        const itemSize = new Blob([JSON.stringify(queue[i])]).size;\n\n        // discard item if it exceeds the maximum size per event\n        if (itemSize > MAX_MSG_SIZE) {\n          console.warn(`Item exceeds size limit (size: ${itemSize}), dropping item.`);\n          continue;\n        }\n\n        // if adding the next item would exceed the batch size limit, stop processing\n        if (totalSize + itemSize >= BATCH_SIZE_LIMIT) {\n          console.debug(`hit batch size limit (size: ${totalSize + itemSize})`);\n          remainingItems.push(...queue.slice(i));\n          console.log(`Remaining items: ${remainingItems.length}`);\n          console.log(`processes items: ${processedItems.length}`);\n          break;\n        }\n\n        // only add the item if it passes both requirements\n        totalSize += itemSize;\n        processedItems.push(queue[i]);\n      } catch (error) {\n        console.error(error);\n        remainingItems.push(...queue.slice(i));\n        break;\n      }\n    }\n\n    return { processedItems, remainingItems };\n  }\n\n  _getFetchOptions(p: {\n    method: WeavelFetchOptions[\"method\"];\n    body?: WeavelFetchOptions[\"body\"];\n  }): WeavelFetchOptions {\n    const fetchOptions: WeavelFetchOptions = {\n      method: p.method,\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"X-Weavel-Sdk-Name\": \"weavel-js\",\n        \"X-Weavel-Sdk-Version\": this.getLibraryVersion(),\n        \"X-Weavel-Sdk-Variant\": this.getLibraryId(),\n        \"X-Weavel-Sdk-Integration\": this.sdkIntegration,\n        ...this.constructAuthorizationHeader(this.apiKey),\n      },\n      body: p.body,\n    };\n\n    return fetchOptions;\n  }\n\n  private constructAuthorizationHeader(\n    apiKey: string,\n  ): {\n    Authorization: string;\n  } {\n      return { Authorization: \"Bearer \" + apiKey };\n  }\n\n  private async fetchWithRetry(\n    url: string,\n    options: WeavelFetchOptions,\n    retryOptions?: RetriableOptions\n  ): Promise<WeavelFetchResponse> {\n    (AbortSignal as any).timeout ??= function timeout(ms: number) {\n      const ctrl = new AbortController();\n      setTimeout(() => ctrl.abort(), ms);\n      return ctrl.signal;\n    };\n\n    return await retriable(\n      async () => {\n        let res: WeavelFetchResponse | null = null;\n        try {\n          res = await this.fetch(url, {\n            signal: (AbortSignal as any).timeout(this.requestTimeout),\n            ...options,\n          });\n        } catch (e) {\n          // fetch will only throw on network errors or on timeouts\n          throw new WeavelFetchNetworkError(e);\n        }\n\n        if (res.status < 200 || res.status >= 400) {\n          const body = await res.json();\n          throw new WeavelFetchHttpError(res, JSON.stringify(body));\n        }\n        return res;\n      },\n      { ...this._retryOptions, ...retryOptions },\n      (string) => this._events.emit(\"retry\", string + \", \" + url + \", \" + JSON.stringify(options))\n    );\n  }\n\n  async shutdownAsync(): Promise<void> {\n    clearTimeout(this._flushTimer);\n    try {\n      await this.flushAsync();\n      await Promise.all(\n        Object.values(this.pendingPromises).map((x) =>\n          x.catch(() => {\n            // ignore errors as we are shutting down and can't deal with them anyways.\n          })\n        )\n      );\n      // flush again in case there are new events that were added while we were waiting for the pending promises to resolve\n      await this.flushAsync();\n    } catch (e) {\n      console.error(\"Error while shutting down Weavel\", e);\n    }\n  }\n\n  protected async awaitAllQueuedAndPendingRequests(): Promise<void> {\n    clearTimeout(this._flushTimer);\n    await this.flushAsync();\n    await Promise.all(Object.values(this.pendingPromises));\n  }\n}\n\nexport abstract class WeavelWebStateless extends WeavelCoreStateless {\n  constructor(params: WeavelCoreOptions) {\n    const { flushAt, flushInterval, apiKey, enabled, ...rest } = params;\n    let isObservabilityEnabled = enabled === false ? false : true;\n\n    if (!isObservabilityEnabled) {\n      console.warn(\"Weavel is disabled. No observability data will be sent to Weavel.\");\n    } else if (!apiKey) {\n      isObservabilityEnabled = false;\n      console.warn(\n        \"Weavel API key not passed to constructor and not set as 'WEAVEL_API_KEY' environment variable. No observability data will be sent to Weavel.\"\n      );\n    }\n\n    super({\n      ...rest,\n      apiKey,\n      flushAt: flushAt ?? 1,\n      flushInterval: flushInterval ?? 0,\n      enabled: isObservabilityEnabled,\n    });\n  }\n\n  async identify(body: IdentifyUserBody): Promise<this> {\n    this.identifyUserStateless(body);\n    await this.awaitAllQueuedAndPendingRequests();\n    return this;\n  }\n\n  async session(body: CaptureSessionBody): Promise<WeavelWebSessionClient> {\n    const id = this.sessionStateless(body);\n    const s = new WeavelWebSessionClient(this, id);\n    await this.awaitAllQueuedAndPendingRequests();\n    return s;\n  }\n  \n  async track(body: CaptureTrackEventBody): Promise<this> {\n    this.trackEventStateless(body);\n    await this.awaitAllQueuedAndPendingRequests();\n    return this;\n  }\n\n  async message(body: CaptureMessageBody): Promise<this> {\n    this.messageStateless(body);\n    await this.awaitAllQueuedAndPendingRequests();\n    return this;\n  }\n  \n}\n\nexport class WeavelWebSessionClient {\n  public readonly client: WeavelWebStateless;\n  public readonly id: string; // id of item itself\n\n  constructor(\n    client: WeavelWebStateless,\n    id: string\n  ) {\n    this.client = client;\n    this.id = id;\n  \n  }\n\n  async track(body: Omit<CaptureTrackEventBody, \"session_id\">): Promise<WeavelWebStateless> {\n    return this.client.track({session_id: this.id, ...body});\n  }\n\n  async message(body: Omit<CaptureMessageBody, \"session_id\">): Promise<WeavelWebStateless> {\n    return this.client.message({session_id: this.id ,...body})\n  }\n}\n\nexport abstract class WeavelCore extends WeavelCoreStateless {\n  constructor(params: WeavelCoreOptions) {\n    const { apiKey, enabled } = params;\n    let isObservabilityEnabled = enabled === false ? false : true;\n\n    if (!isObservabilityEnabled) {\n      console.warn(\"Weavel is disabled. No observability data will be sent to Weavel.\");\n    } else if (!apiKey) {\n      isObservabilityEnabled = false;\n      console.warn(\n        \"Weavel API key was not passed to constructor or not set as 'WEAVEL_API_KEY' environment variable. No observability data will be sent to Weavel.\"\n      );\n    } \n\n    super({ ...params, enabled: isObservabilityEnabled });\n  }\n  \n  identify(body: IdentifyUserBody): this {\n    this.identifyUserStateless(body);\n    return this;\n  }\n\n  session(body: CaptureSessionBody): WeavelSessionClient {\n    const id = this.sessionStateless(body );\n    const s = new WeavelSessionClient(this, id);\n    return s;\n  }\n\n  trace(body: CaptureTraceBody): WeavelTraceClient {\n    const id = this.traceStateless(body);\n    const t = new WeavelTraceClient(this, id);\n    return t;\n  }\n\n  span(body: CaptureSpanBody): WeavelSpanClient {\n    const id = this.spanStateless(body);\n    return new WeavelSpanClient(this, id, body.record_id);\n  }\n\n  generation(\n    body: CaptureGenerationBody\n  ): WeavelGenerationClient {\n    const id = this.generationStateless(body);\n    return new WeavelGenerationClient(this, id, body.record_id);\n  }\n\n  log(body: CaptureLogBody): this {\n    this.logStateless(body);\n    return this;\n  }\n\n  _updateTrace(body: UpdateTraceBody): this {\n    this.updateTraceStateless(body);\n    return this;\n  }\n\n  _updateSpan(body: UpdateSpanBody): this {\n    this.updateSpanStateless(body);\n    return this;\n  }\n\n  _updateGeneration(body: UpdateGenerationBody): this {\n    this.updateGenerationStateless(body);\n    return this;\n  }\n}\n\nexport class WeavelSessionClient {\n  public readonly client: WeavelCore;\n  public readonly id: string; // id of item itself\n\n  constructor(\n    client: WeavelCore,\n    id: string\n  ) {\n    this.client = client;\n    this.id = id;\n  \n  }\n\n  trace(body: Omit<CaptureTraceBody, \"session_id\">): WeavelTraceClient {\n    return this.client.trace({session_id: this.id, ...body});\n  }\n\n  span(body: CaptureSpanBody): WeavelSpanClient {\n    return this.client.span(body)\n  }\n\n  generation(\n    body: CaptureGenerationBody\n  ): WeavelGenerationClient {\n    return this.client.generation(body)\n  }\n\n  log(body: CaptureLogBody): WeavelCore {\n    return this.client.log(body)\n  }\n}\n\nexport abstract class WeavelObjectClient {\n  public readonly client: WeavelCore;\n  public readonly id: string; // id of item itself\n  public readonly recordId: string; // id of trace, if traceClient this is the same as id\n  public readonly observationId: string | null; // id of observation, if observationClient this is the same as id, if traceClient this is null\n\n  constructor({\n    client,\n    id,\n    recordId,\n    observationId,\n  }: {\n    client: WeavelCore;\n    id: string;\n    recordId: string;\n    observationId: string | null;\n  }) {\n    this.client = client;\n    this.id = id;\n    this.recordId = recordId;\n    this.observationId = observationId;\n  }\n\n  span(body: Omit<CaptureSpanBody, \"record_id\" | \"parent_observation_id\">): WeavelSpanClient {\n    return this.client.span({...body, record_id: this.recordId,\n      parent_observation_id: this.observationId});\n  }\n\n  log(body: Omit<CaptureLogBody, \"record_id\" | \"parent_observation_id\">): WeavelCore {\n    return this.client.log({...body, record_id: this.recordId,\n      parent_observation_id: this.observationId});\n  }\n\n  generation(body: Omit<CaptureGenerationBody, \"record_id\" | \"parent_observation_id\">): WeavelGenerationClient {\n    return this.client.generation({...body, record_id: this.recordId,\n      parent_observation_id: this.observationId});\n  }\n\n}\n\n\nexport class WeavelTraceClient extends WeavelObjectClient {\n  constructor(client: WeavelCore, recordId: string) {\n    super({ client, id: recordId, recordId, observationId: null });\n  }\n\n  update(body: Omit<UpdateTraceBody, \"record_id\">): this {\n    this.client._updateTrace({\n      ...body,\n      record_id: this.id,\n    });\n    return this;\n  }\n\n  end(body?: Omit<UpdateTraceBody, \"record_id\" | \"ended_at\" >): this {\n    this.client._updateTrace({\n      ...body,\n      record_id: this.id,\n      ended_at: new Date().toISOString(),\n    });\n    return this;\n  }\n}\n\nexport class WeavelSpanClient extends WeavelObjectClient {\n  constructor(client: WeavelCore, id: string, recordId: string) {\n    super({client, id, recordId, observationId: id});\n  }\n\n  update(body: Omit<UpdateSpanBody, \"observation_id\" | \"record_id\">): this {\n    this.client._updateSpan({\n      ...body,\n      record_id: this.recordId,\n      observation_id: this.id,\n    });\n    return this;\n  }\n\n\n  end(body: Omit<UpdateSpanBody, \"observation_id\" | \"ended_at\" >): this {\n    this.client._updateSpan({\n      ...body,\n      record_id: this.recordId,\n      observation_id: this.id,\n      ended_at: new Date().toISOString(),\n    });\n    return this;\n  }\n}\n\nexport class WeavelGenerationClient {\n  public readonly client: WeavelCore;\n  public readonly id: string; // id of generation\n  public readonly recordId: string; // id of trace\n\n  constructor(\n    client: WeavelCore,\n    id: string,\n    recordId: string,\n  ) {\n    this.client = client;\n    this.id = id;\n    this.recordId = recordId;\n  }\n\n  update(body: Omit<UpdateGenerationBody, \"observation_id\" | \"record_id\">): this {\n    this.client._updateGeneration({\n      ...body,\n      record_id: this.recordId,\n      observation_id: this.id,\n    });\n    return this;\n  }\n\n\n  end(body: Omit<UpdateGenerationBody, \"observation_id\" | \"ended_at\" >): this {\n    this.client._updateGeneration({\n      ...body,\n      record_id: this.recordId,\n      observation_id: this.id,\n      ended_at: new Date().toISOString(),\n    });\n    return this;\n  }\n\n}\n\nexport * from \"./types\";\nexport * from \"./openapi/server\";\n"],"names":["assert","truthyValue","message","Error","removeTrailingSlash","url","replace","retriable","fn","props","log","retryCount","retryDelay","retryCheck","lastError","i","Promise","resolve","setTimeout","res","e","JSON","stringify","generateUUID","globalThis","d","Date","getTime","d2","performance","now","c","r","Math","random","floor","toString","currentTimestamp","currentISOTime","toISOString","safeSetTimeout","timeout","t","unref","getEnv","key","process","env","configWeavelSDK","params","apiKey","coreOptions","finalAPIKey","finalBaseUrl","baseUrl","finalCoreOptions","encodeQueryParams","queryParams","URLSearchParams","Object","entries","forEach","value","undefined","append","WeavelPersistedProperty","SimpleEventEmitter","constructor","events","on","event","listener","push","filter","x","emit","payload","WeavelMemoryStorage","_memoryStorage","getProperty","setProperty","WeavelFetchHttpError","response","body","status","name","WeavelFetchNetworkError","error","cause","isWeavelFetchError","err","WeavelCoreStateless","debugMode","pendingPromises","_events","_options","enabled","options","flushAt","max","flushInterval","_retryOptions","fetchRetryCount","fetchRetryDelay","requestTimeout","sdkIntegration","getSdkIntegration","getCommonEventProperties","$lib","getLibraryId","$lib_version","getLibraryVersion","cb","debug","removeDebugCallback","console","sessionStateless","session_id","bodyId","created_at","bodyCreatedAt","rest","parsedBody","enqueue","identifyUserStateless","user_id","messageStateless","record_id","trackEventStateless","traceStateless","spanStateless","observation_id","generationStateless","logStateless","updateTraceStateless","updateSpanStateless","updateGenerationStateless","_parsePayload","parse","type","queue","getPersistedProperty","Queue","setPersistedProperty","length","flush","_flushTimer","flushAsync","_reject","data","callback","clearTimeout","items","splice","MAX_MSG_SIZE","BATCH_SIZE_LIMIT","processQueueItems","promiseUUID","done","batch","metadata","batch_size","sdk_integration","sdk_version","sdk_variant","sdk_name","fetchOptions","_getFetchOptions","method","requestPromise","fetchWithRetry","then","catch","finally","totalSize","processedItems","remainingItems","itemSize","Blob","size","warn","slice","p","headers","constructAuthorizationHeader","Authorization","retryOptions","AbortSignal","ms","ctrl","AbortController","abort","signal","fetch","json","string","shutdownAsync","all","values","map","awaitAllQueuedAndPendingRequests","WeavelWebStateless","isObservabilityEnabled","identify","session","id","s","WeavelWebSessionClient","track","client","WeavelCore","WeavelSessionClient","trace","WeavelTraceClient","span","WeavelSpanClient","generation","WeavelGenerationClient","_updateTrace","_updateSpan","_updateGeneration","WeavelObjectClient","recordId","observationId","parent_observation_id","update","end","ended_at"],"mappings":"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"}